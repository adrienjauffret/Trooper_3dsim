<?xml version="1.0"?>
<launch>

  <!-- these are the arguments you can pass this launch file, for example paused:=true -->
  <arg name="paused" default="false"/>
  <arg name="use_sim_time" default="true"/>
  <arg name="gui" default="true"/>
  <arg name="headless" default="false"/>
  <arg name="debug" default="false"/>

  <!-- We resume the logic in empty_world.launch, changing only the name of the world to be launched -->
  <include file="$(find trooper_gazebo)/launch/world.launch">
    <arg name="debug" value="$(arg debug)" />
    <arg name="gui" value="$(arg gui)" />
    <arg name="paused" value="$(arg paused)"/>
    <arg name="use_sim_time" value="$(arg use_sim_time)"/>
    <arg name="headless" value="$(arg headless)"/>
  </include>




	<!-- Path to URDF file -->
  <param name="robot_description" textfile="$(find trooper_description)/urdf/trooper.urdf" />


  <!-- push robot_description to factory and spawn robot in gazebo -->
  <node name="urdf_spawner" pkg="gazebo_ros" type="spawn_model"
        args="-z 1.0 -unpause -urdf -model trooper -param robot_description" respawn="false" output="screen" />

  <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" >
    <param name="publish_frequency" type="double" value="30.0" />
  </node>


	<!-- Pops up a 2 axis virtual joystick to control the robot manually -->
  <node name="rqt_robot_steering" pkg="rqt_robot_steering" type="rqt_robot_steering">
    <param name="default_topic" value="/trooper__diff_drive_controller/cmd_vel"/>
  </node>



	<!-- Paths to joint controller  description files -->
	<rosparam command="load"
            file="$(find trooper_description)/config/joints.yaml"
            ns="trooper__platform_state" />
	<rosparam command="load"
            file="$(find trooper_description)/config/platform.yaml"
            ns="trooper__platform_motor" />
	<rosparam command="load"
            file="$(find trooper_description)/config/diffdrive.yaml"
            ns="trooper__diff_drive_controller" />


  <node name="trooper__controller_spawner" pkg="controller_manager" type="spawner"
    args="trooper__platform_state
					trooper__platform_motor
					trooper__diff_drive_controller
          --shutdown-timeout 3"/>


</launch>
