<?xml version="1.0"?>
<robot name="trooper" xmlns:xacro="http://ros.org/wiki/xacro">


<!-- Color materials (Compatible with Rviz but not yet with Gazebo) -->
	<material name="greenish">
		<color rgba="0 0.612 0.306 1"/>
	</material>
	 
	<material name="whiteish">
		<color rgba="1 1 0.98 1"/>
	</material>

	<material name="rubber">
		<color rgba="0.1 0.1 0.1 1"/>
	</material>


<!-- LINKS -->

<!-- CHASSIS -->  
	<link name="trooper__chassis">
    <inertial>
      <mass value="40"/>
      <origin rpy="0  0  0" xyz="0  0  0"/>
      <inertia ixx="1.0" ixy="0.0" ixz="0.0" iyy="1.0" iyz="0.0" izz="1.0"/>
    </inertial>
    <collision>
      <origin rpy="0  0  0" xyz="0    0    0"/>
      <geometry>
        <mesh filename="package://trooper_description/meshes/stl/chassis.stl" scale="0.01 0.01 0.01"/>
      </geometry>
    </collision>
    <visual>
      <origin rpy="0  0  0" xyz="0    0    0"/>
      <geometry>
        <mesh filename="package://trooper_description/meshes/stl/chassis.stl" scale="0.01 0.01 0.01"/>
      </geometry>
			<material name="whiteish"/>
    </visual>
  </link>

	<gazebo reference="trooper__chassis">
		<material>Gazebo/White</material>
	</gazebo>




<!-- DRIVE WHEEL -->

  <link name="trooper__left_wheel">
    <inertial>
      <mass value="1"/>
      <origin rpy="0  0  0" xyz="0  0  0"/>
      <inertia ixx="1.0" ixy="0.0" ixz="0.0" iyy="1.0" iyz="0.0" izz="1.0"/>
    </inertial>
    <collision>
      <origin rpy="1.5707  0  0" xyz="0  0  0"/>
      <geometry>
        <cylinder radius="0.15" length="0.1" />
      </geometry>
    </collision>
    <visual>
      <origin rpy="0  0  0" xyz="0  0  0"/>
      <geometry>
        <mesh filename="package://trooper_description/meshes/stl/drive_wheel.stl" scale="0.01 0.01 0.01"/>
      </geometry>
			<material name="rubber"/>
    </visual>
  </link>

	<!-- Set PID coeff for left wheel -->
	<gazebo reference="trooper__left_wheel">
		<material>Gazebo/Grey </material>
		<mu1 value="200"/>
		<mu2 value="100"/>
		<kp value="10000000.0" />
		<kd value="1.0" />
		<maxVel>0.0</maxVel>
		<minDepth>0.001</minDepth>
	</gazebo>


  <link name="trooper__right_wheel">
    <inertial>
      <mass value="1"/>
      <origin rpy="0  0  0" xyz="0  0  0"/>
      <inertia ixx="1.0" ixy="0.0" ixz="0.0" iyy="1.0" iyz="0.0" izz="1.0"/>
    </inertial>
    <collision>
      <origin rpy="1.5707  0  0" xyz="0  0  0"/>
      <geometry>
        <cylinder radius="0.15" length="0.1" />
      </geometry>
    </collision>
    <visual>
      <origin rpy="0  0  0" xyz="0  0  0"/>
      <geometry>
        <mesh filename="package://trooper_description/meshes/stl/drive_wheel.stl" scale="0.01 0.01 0.01"/>
      </geometry>
			<material name="rubber"/>
    </visual>
  </link>

	<!-- Set PID coeff for right wheel -->
	<gazebo reference="trooper__right_wheel">
		<material>Gazebo/Grey </material>
		<mu1 value="200"/>
		<mu2 value="100"/>
		<kp value="10000000.0" />
		<kd value="1.0" />
		<maxVel>0.0</maxVel>
		<minDepth>0.001</minDepth>
	</gazebo>


  <link name="trooper__rim">
    <origin rpy="0.0 0.0 0.0" xyz="0.0 0.0 0.0" />
    <visual>
      <geometry>
        <cylinder radius="0.06" length="0.74" />
      </geometry>
    </visual>
  </link>

	<gazebo reference="trooper__rim">
		<material>Gazebo/Red</material>
	</gazebo>





<!-- PLATFORM -->
  <link name="trooper__platform">
    <inertial>
      <mass value="10"/>
      <origin rpy="0  0  0" xyz="0  0  0"/>
      <inertia ixx="1.0" ixy="0.0" ixz="0.0" iyy="1.0" iyz="0.0" izz="1.0"/>
    </inertial>
    <collision>
      <origin rpy="0  0  0" xyz="0.09  0    0"/>
      <geometry>
        <mesh filename="package://trooper_description/meshes/stl/platform_5x4L.stl" scale="0.01 0.01 0.01"/>
      </geometry>
    </collision>
    <visual>
      <origin rpy="0  0  0" xyz="0.09  0    0"/>
      <geometry>
        <mesh filename="package://trooper_description/meshes/stl/platform_5x4L.stl" scale="0.01 0.01 0.01"/>
      </geometry>
			<material name="greenish"/>
    </visual>
  </link>

	<gazebo reference="trooper__platform">
		<material>Gazebo/Green</material>
	</gazebo>





<!-- SENSORS -->

	<link name="hokuyo_link">
		<collision>
		  <origin xyz="0 0 0" rpy="0 0 0"/>
		  <geometry>
		    <box size="0.05 0.05 0.041"/>
		  </geometry>
		</collision>
		<visual>
		  <origin xyz="0 0 0" rpy="0 0 0"/>
		  <geometry>
		    <cylinder length="0.029" radius="0.021"/>
		  </geometry>
		</visual>
		<inertial>
		  <mass value="0.1" />
		  <origin xyz="0 0 0" rpy="0 0 0"/>
		  <inertia ixx="1" ixy="0" ixz="0" iyy="1" iyz="0" izz="1" />
		</inertial>
	</link>





<!-- JOINTS -->  

	<joint name="trooper__left_wheel_to_chassis" type="continuous">
    <parent link="trooper__chassis"/>
    <child link="trooper__left_wheel"/>
    <origin rpy="1.5707  1.5707  1.5707" xyz="0.14  0.33  0.15"/>
    <axis xyz="0   1   0"/>
    <limit effort="50" velocity="100"/>
		<dynamics damping="0.7" friction="100" />
  </joint>

 	<joint name="trooper__right_wheel_to_chassis" type="continuous">
    <parent link="trooper__chassis"/>
    <child link="trooper__right_wheel"/>
    <origin rpy="1.5707 -1.5707  1.5707" xyz="0.14 -0.33  0.15"/>
    <axis xyz="0  -1  0"/>
    <limit effort="50" velocity="100"/>
		<dynamics damping="0.7" friction="100" />
  </joint>


	<joint name="trooper__rim_to_chassis" type="fixed">
    <parent link="trooper__chassis"/>
    <child link="trooper__rim"/>
    <origin rpy="1.5707 0 0" xyz="0.14 0 0.15"/>
    <axis xyz="0 0 0"/>
  </joint>

	<joint name="trooper__platform_to_chassis" type="continuous">
    <parent link="trooper__chassis"/>
    <child link="trooper__platform"/>
    <origin rpy="0  0  1.5707" xyz="0  0  0.55"/>
    <axis xyz="0  0  1"/>
    <limit effort="10" velocity="100"/>
  </joint>

  <property name="hokuyo_link" value="0.15" />
  <joint name="hokuyo_joint" type="fixed">
    <axis xyz="0 1 0" />
    <origin xyz="0.28 0 0.08" rpy="0 0 0"/>
    <parent link="trooper__chassis"/>
    <child link="hokuyo_link"/>
  </joint>






<!--  GAZEBO plugin for Laser -->	
  <gazebo reference="hokuyo_link">
    <sensor type="ray" name="head_hokuyo_sensor">
      <pose>0 0 0 0 0 0</pose>
      <visualize>true</visualize>
      <update_rate>30</update_rate>
      <ray>
        <scan>
          <horizontal>
            <samples>60</samples>
            <resolution>1</resolution>
            <min_angle>-1.5707</min_angle>
            <max_angle>1.5707</max_angle>
          </horizontal>
        </scan>
        <range>
          <min>0.10</min>
          <max>30.0</max>
          <resolution>0.01</resolution>
        </range>
        <noise>
          <type>gaussian</type>
          <!-- Noise parameters based on published spec for Hokuyo laser
               achieving "+-30mm" accuracy at range < 10m.  A mean of 0.0m and
               stddev of 0.01m will put 99.7% of samples within 0.03m of the true
               reading. -->
          <mean>0.0</mean>
          <stddev>0.01</stddev>
        </noise>
      </ray>
      <plugin name="gazebo_ros_head_hokuyo_controller" filename="libgazebo_ros_laser.so">
        <topicName>/laser/scan</topicName>
        <frameName>hokuyo_link</frameName>
      </plugin>
    </sensor>
  </gazebo>






<!--  GAZEBO plugin for ROS Control -->
	<gazebo>
		<plugin name="gazebo_ros_control" filename="libgazebo_ros_control.so">
		<robotNamespace>/</robotNamespace>
		</plugin>
	</gazebo>



<!-- TRANSMISSIONS -->
  <transmission name="trooper__platform_to_chassis_trans">
    <type>transmission_interface/SimpleTransmission</type>
    <actuator name="trooper__platform_state">
      <mechanicalReduction>1</mechanicalReduction>
    </actuator>
    <joint name="trooper__platform_to_chassis">
      <hardwareInterface>PositionJointInterface</hardwareInterface>
    </joint>
  </transmission>

  <transmission name="trooper__left_wheel_to_chassis_trans">
    <type>transmission_interface/SimpleTransmission</type>
    <actuator name="trooper__left_wheel_state">
      <mechanicalReduction>1</mechanicalReduction>
    </actuator>
    <joint name="trooper__left_wheel_to_chassis">
      <hardwareInterface>VelocityJointInterface</hardwareInterface>
    </joint>
  </transmission>

  <transmission name="trooper__right_wheel_to_chassis_trans">
    <type>transmission_interface/SimpleTransmission</type>
    <actuator name="trooper__right_wheel_state">
      <mechanicalReduction>1</mechanicalReduction>
    </actuator>
    <joint name="trooper__right_wheel_to_chassis">
      <hardwareInterface>VelocityJointInterface</hardwareInterface>
    </joint>
  </transmission>




</robot>



